refresh_rate: 30 seconds
# appender 负责将日志收集到控制台或文件, 可配置多个
appenders:
  file:
    kind: rolling_file
    path: "log/log.log"
    encoder:
      # log 信息模式
      pattern: "[{d(%Y-%m-%dT%H:%M:%S)}] [{t}] {h({l})} {m}{n}"
    policy:
      kind: compound # 默认值, 即使用所有 policy
      trigger: # 当文件超过10mb 时触发 rotate
        kind: size
        limit: 1mb
      roller: # rotate 类型
        # 或者用 fixed_window
        kind: fixed_window
        pattern: "log/compressed-log-{}-.log" # 注意, 需要至少包含 "{}" 用于插入索引值
        base: 0 # 压缩日志索引值起点
        count: 3 # 最大保存压缩文件数
  stdout:
    kind: console
    encoder:
      # log 信息模式
      pattern: "[{d(%Y-%m-%dT%H:%M:%S)}] [{t}] {h({l})} {m}{n}"
# 对全局 log 进行配置

root:
  level: debug
  appenders:
    - file

loggers:
  # 对特定 log 进行配置
  bot:
    level: info
    appenders:
      - stdout
  contest:
    level: info
    appenders:
      - stdout
  manager:
    level: info
    appenders:
      - stdout
  command_handler:
    level: debug
    appenders:
      - stdout
  kovi:
    level: info
    appenders:
      - stdout
  aichat:
    level: debug
    appenders:
      - stdout
  word_cloud:
    level: debug
    appenders:
      - stdout